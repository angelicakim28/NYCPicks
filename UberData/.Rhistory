extcond_dummy, extcond_avg, intcond_dummy, intcond_avg, depth_copy,
depth_dummy, frontage_copy, frontage_dummy, total_area_copy,total_area_dummy,
market_value_copy, market_value_dummy, absenteelandlord, outofstateLL, outofPhillyLL,
knn_lic_5, knn_viol_5, ZZinactivedate, rental_butNolic, owner_count, MAPNAME,
pct_white2_dummy, pct_white2, pct_black2_dummy, pct_black2, pct_AmIndian2_dummy,
pct_AmIndian2, pct_asian2_dummy, pct_asian2, pct_nativeHawaiian2_dummy, pct_nativeHawaiian2,
pct_other2_dummy,pct_other2, pct_mixedrace2_dummy, pct_mixedrace2, pct_notwhte2_dummy,
pct_notwhte2, pct_foreignborn2_dummy,pct_foreignborn2, pct_naturalizedcitizen2_dummy,
pct_naturalizedcitizen2, pct_noncitizen2_dummy, pct_noncitizen2, Pop_pov_Est2_dummy,
Pop_pov_Est2, pct_pop_below2_dummy, pct_pop_below2, rent_burden2_dummy, rent_burden2,
pct_female_hh2_dummy, pct_female_hh2, per_elevated2_dummy, per_elevated2, sum_home_evict2_dummy,
sum_home_evict2, sum_LL_evict2_dummy, sum_LL_evict2, owes2, hist_extviol2, hist_intviol2,
other_violations2, issue_fixed_dummy, issue_fixed_y, active_case_dummy, active_case_y,
total_due_dummy, total_due2, num_years_owed_dummy, num_years_owed2, lentim_sincelast_viol_dummy,
lentim_sincelast_viol2, time_since_last_dummy, time_since_last2, multipleunits_dummy,
multipleunits_y, num_prev_lic_dummy, status_mostrecent_dummy, status_mostrecent_active,
legalentit_dummy, legalentit_indiv))
#rename columns by copy
data7$timesincelast_lic <- data7$time_since_last2
data7$timesincelast_lic_dummy <- data7$time_since_last_dummy
data7$mostrecentLicen_active <- data7$status_mostrecent_active
data7$mostrecentLicen_active_dummy <- data7$status_mostrecent_dummy
fulldat <- data7
#more class adjustments
fulldat$quality_grade_copy <- as.factor(data6$quality_grade_copy)
class(fulldat$timesincelast_lic) #factor
fulldat$timesincelast_lic<- ifelse(fulldat$timesincelast_lic=='only one active', 0, fulldat$timesincelast_lic)
fulldat$timesincelast_lic<- as.numeric(as.character(fulldat$timesincelast_lic))
class(fulldat$timesincelast_lic) #numeric
##############################################################################################
# FULL DATASET:
# Separate Test and Train of complete dataset
set.seed(1234)
cvFit_fulltrain_vio$results[2]
cvFit_fulltrain_vio$results[2][1]
cvFit_fulltrain_vio$results[2][2]
#save ROC
full_train_viol_roc <- cvFit_fulltrain_vio$results[2]
resultsTable <-
rbind(resultsTable,
data.frame(modelNum = 3,
modelName= "model2_viol_sample",
Description = "Logit Model; Violations Story; Sample Data",
McFadden = mcfadden_vio_sample,
MAE = sample_train_viol_mae,
Cut_Off = 0.6,
Sensitivity = 0.7788,
Specificity = 0.9180,
Accuracy = 0.891,
AUC = sample_test_vio_auc,
ROC = full_train_viol_roc)
)
kable(resultsTable)
resultsTable <-
rbind(resultsTable,
data.frame(modelNum = 3,
modelName= "model2_viol_sample",
Description = "Logit Model; Violations Story; Sample Data",
McFadden = mcfadden_vio_sample,
MAE = sample_train_viol_mae,
Cut_Off = 0.6,
Sensitivity = 0.7788,
Specificity = 0.9180,
Accuracy = 0.891,
AUC = full_train_viol_roc)
)
kable(resultsTable)
#save ROC
full_train_viol_roc <- cvFit_fulltrain_vio$results[2]
full_train_viol_roc <- 0.8745734
#save ROC
full_train_viol_roc <- cvFit_fulltrain_vio$results[2]
View(full_train_viol_roc)
z<-cvFit_fulltrain_vio$results[2]
z<- as.value(z)
z<-cvFit_fulltrain_vio$results[[2]]
pR2(model2_viol_full)[[4]]
rm(mcfadden_vio_full)
#for full data
mcfadden_vio_full<-pR2(model2_viol_full)[[4]]
rm(mcfadden_vio_sample)
#for sample data
mcfadden_vio_sample<-pR2(model2_viol_sample)[[4]]
#subset data6 for variables to be used make copy
data7 <- subset(data6, select=c(illegalRental_dv, parcel_number, sale_date, sale_price, quality_grade_copy,
basement_dummy, basement_none, basement_full, basement_partial,
basement_sizeNotKnown,central_air_dummy, central_air_y,
unfinished_unit, unit_new, garage_type_dummy, garage_type_y,
general_construction_dummy, general_construction_brickY,
site_type_dummy, site_type_inblock, type_heater_yn, type_heater_dummy,
other_bldg_yn, exempt_building_dummy, exempt_building_y,
exempt_land_dummy, exempt_land_y, taxable_building_dummy, taxable_building_y,
taxable_land_dummy, taxable_land_y, story1, story2, story3, story4plus,
year_built_copy, built_pre1900, built_btw1900and1950, built_post1950,
extcond_dummy, extcond_avg, intcond_dummy, intcond_avg, depth_copy,
depth_dummy, frontage_copy, frontage_dummy, total_area_copy,total_area_dummy,
market_value_copy, market_value_dummy, absenteelandlord, outofstateLL, outofPhillyLL,
knn_lic_5, knn_viol_5, ZZinactivedate, rental_butNolic, owner_count, MAPNAME,
pct_white2_dummy, pct_white2, pct_black2_dummy, pct_black2, pct_AmIndian2_dummy,
pct_AmIndian2, pct_asian2_dummy, pct_asian2, pct_nativeHawaiian2_dummy, pct_nativeHawaiian2,
pct_other2_dummy,pct_other2, pct_mixedrace2_dummy, pct_mixedrace2, pct_notwhte2_dummy,
pct_notwhte2, pct_foreignborn2_dummy,pct_foreignborn2, pct_naturalizedcitizen2_dummy,
pct_naturalizedcitizen2, pct_noncitizen2_dummy, pct_noncitizen2, Pop_pov_Est2_dummy,
Pop_pov_Est2, pct_pop_below2_dummy, pct_pop_below2, rent_burden2_dummy, rent_burden2,
pct_female_hh2_dummy, pct_female_hh2, per_elevated2_dummy, per_elevated2, sum_home_evict2_dummy,
sum_home_evict2, sum_LL_evict2_dummy, sum_LL_evict2, owes2, hist_extviol2, hist_intviol2,
other_violations2, issue_fixed_dummy, issue_fixed_y, active_case_dummy, active_case_y,
total_due_dummy, total_due2, num_years_owed_dummy, num_years_owed2, lentim_sincelast_viol_dummy,
lentim_sincelast_viol2, time_since_last_dummy, time_since_last2, multipleunits_dummy,
multipleunits_y, num_prev_lic_dummy, status_mostrecent_dummy, status_mostrecent_active,
legalentit_dummy, legalentit_indiv))
#rename columns by copy
data7$timesincelast_lic <- data7$time_since_last2
data7$timesincelast_lic_dummy <- data7$time_since_last_dummy
data7$mostrecentLicen_active <- data7$status_mostrecent_active
data7$mostrecentLicen_active_dummy <- data7$status_mostrecent_dummy
fulldat <- data7
#more class adjustments
fulldat$quality_grade_copy <- as.factor(data6$quality_grade_copy)
class(fulldat$timesincelast_lic) #factor
fulldat$timesincelast_lic<- ifelse(fulldat$timesincelast_lic=='only one active', 0, fulldat$timesincelast_lic)
fulldat$timesincelast_lic<- as.numeric(as.character(fulldat$timesincelast_lic))
class(fulldat$timesincelast_lic) #numeric
##############################################################################################
# FULL DATASET:
# Separate Test and Train of complete dataset
set.seed(1234)
inTrain <- createDataPartition(
y = fulldat$illegalRental_dv,
p = .75, list = FALSE)
full_train <- fulldat[ inTrain,] #the new training set
full_test <- fulldat[-inTrain,]  #the new test set
dim(full_train)
dim(full_test)
table(full_train$illegalRental_dv)
table(full_test$illegalRental_dv)
#first select all rows with illegalRental_dv==1
temp1<-subset(fulldat, fulldat$illegalRental_dv==1)
temp0<-subset(fulldat, fulldat$illegalRental_dv==0)
#select 8900 random rows from temp 0 (2225*4=8900)
random_0 <- temp0[sample(nrow(temp0), 8900), ]
#rbind 8900 rows of 0 to the 2225 rows of 1
newsample <- rbind(temp1,random_0)
#select 8900 random rows from temp 0 (2225*4=8900)
random_0 <- temp0[data.table::sample(nrow(temp0), 8900), ]
load("~/Downloads/MUSA801Practicum/0416.RData")
detach("package:SparkR", unload=TRUE)
copy_sampletest<-newsample_test
copy_sampletrain<-newsample_train
copy_sampletrain<-subset(copy_sampletrain,select=-c(illegalRental_dv2))
copy_sampletrain<-cbind(copy_sampletrain,model2_viol_sample$fitted.values)
copy_sampletrain$classProbs<-copy_sampletrain$model2_viol_sample.fitted.values
copy_sampletrain<-subset(copy_sampletrain,select=-c(model2_viol_sample.fitted.values))
samplescombined <- rbind(copy_sampletrain,copy_sampletest)
hist(samplescombined$classProbs)
class(samplescombined)
#make LAT and LNG coordinates from geometry
samplescombined$longitude <- st_coordinates(samplescombined)[,1]
samplescombined$latitude <- st_coordinates(samplescombined)[,2]
rm(samplescombined_df)
#add id column for now
samplescombined$ID_temp <- seq.int(nrow(data))
#add id column for now
samplescombined <- tibble::rowid_to_column(samplescombined, "ID")
View(samplescombined)
write.csv(samplescombined, 'samplescombined4.csv', row.names = FALSE)
#select only the columns of interest to be used
samplescombined2<-samplescombined
names(samplescombined2)
samplescombined2<-subset(samplescombined2,
select=c(ID,illegalRental_dv,classProbs, quality_grade_copy, central_air_y,
unfinished_unit, unit_new, garage_type_y, type_heater_yn,
other_bldg_yn,exempt_building_y,exempt_land_y,taxable_building_y,
taxable_land_y, story1, story2, story3, story4plus, year_built_copy,
extcond_dummy, extcond_avg, intcond_dummy, intcond_avg, frontage_copy,
total_area_copy, market_value_copy, absenteelandlord, outofstateLL,
outofPhillyLL, rental_butNolic, owner_count, MAPNAME, sum_home_evict2,
sum_LL_evict2_dummy, sum_LL_evict2, owes2, hist_extviol2, hist_intviol2,
other_violations2, issue_fixed_dummy, issue_fixed_y, active_case_dummy,
active_case_y, total_due_dummy, total_due2, num_years_owed_dummy,
num_years_owed2, lentim_sincelast_viol2, multipleunits_y, mostrecentLicen_active,
legalentit_indiv, timesincelast_lic, longitude, latitude))
samplescombined2$num_of_stories<- ifelse(samplescombined2$story1==1,1,
ifelse(samplescombined2$story2==1,2,
ifelse(samplescombined2$story3==1,3,
ifelse(samplescombined2$story4plus==1,'4+',0))))
table(samplescombined2$num_of_stories)
table(samplescombined2$story1)
table(samplescombined2$story2)
table(samplescombined2$story3)
table(samplescombined2$story4plus)
table(samplescombined2$absenteelandlord)
table(samplescombined2$outofstateLL)
table(samplescombined2$outofPhillyLL)
samplescombined2$offsite_landlord<-ifelse(samplescombined2$outofstateLL==1,'out_of_state',
ifelse(samplescombined2$outofPhillyLL==1,'out_of_Philly','on_site'))
samplescombined2<-subset(samplescombined2,select=-c(story1,story2,story3,story4plus,
outofstateLL, outofPhillyLL))
write.csv(samplescombined2, 'samplescombined5.csv', row.names = FALSE)
summary(samplescombined2$classProbs)
table(samplescombined2$year_built_copy)
library(gbm)
# 10-fold CV
fitControl <- trainControl(method = "repeatedcv",number = 10)
installed.packages('gbm')
## CROSS VALIDATION (2?)
library(gbm)
#now fit gbm using train
set.seed(825)
gbmFit1 <- train(model2_viol_sample,
method = "gbm",
trControl = fitControl,
verbose = FALSE,
data = newsample_train)
?train
gbmFit1 <- train(violations_fm2,
method = "gbm",
trControl = fitControl,
verbose = FALSE,
data = newsample_train)
gbmFit
cvFit_sampletrain_vio
save.image("~/Downloads/MUSA801Practicum/viol_model_0417.RData")
# 10-fold CV
fitControl <- trainControl(method = "repeatedcv",number = 10, summaryFunction=twoClassSummary)
#now fit gbm using train
set.seed(825)
gbmFit1 <- train(violations_fm2,
method = "gbm",
trControl = fitControl,
verbose = FALSE,
data = newsample_train)
# 10-fold CV
fitControl <- trainControl(method = "repeatedcv",number = 10, classProbs=TRUE, summaryFunction=twoClassSummary)
#now fit gbm using train
set.seed(825)
gbmFit1 <- train(violations_fm2,
method = "gbm",
trControl = fitControl,
verbose = FALSE,
data = newsample_train)
gbmFit1 <- train(violations_fm3,
method = "gbm",
trControl = fitControl,
verbose = FALSE,
data = newsample_train)
gbmFit1
cvFit_sampletrain_vio
accuracy_info <- AccuracyCutoffInfo( train = newsample_train, test = newsample_test,
predict = "prediction", actual = "illegalRental_dv" )
# functions are sourced in, to reduce document's length
source("unbalanced_code/unbalanced_functions.R")
# environment setting
library(ROCR)
library(broom)
library(scales)
library(ggthemr)
install.packages('ggthemr')
install.packages('ROCR')
# environment setting
library(ROCR)
accuracy_info <- AccuracyCutoffInfo( train = newsample_train, test = newsample_test,
predict = "prediction", actual = "illegalRental_dv" )
accuracy_info <- pROC::AccuracyCutoffInfo( train = newsample_train, test = newsample_test,
predict = "prediction", actual = "illegalRental_dv" )
# functions are sourced in, to reduce document's length
source("unbalanced_code/unbalanced_functions.R")
# functions are sourced in, to reduce document's length
source("./unbalanced_functions.R")
accuracy_info <- AccuracyCutoffInfo( train = newsample_train, test = newsample_test,
predict = "prediction", actual = "illegalRental_dv" )
newsample_test$classProbs
#predictions
# prediction
sample_train2$prediction <- predict( model2_viol_sample, newdata = sample_train2, type = "response" )
sample_train2<-newsample_train
sample_test2<-newsample_test
#predictions
# prediction
sample_train2$prediction <- predict( model2_viol_sample, newdata = sample_train2, type = "response" )
sample_test2$prediction  <- predict( model2_viol_sample, newdata = sample_test2 , type = "response" )
accuracy_info <- AccuracyCutoffInfo( train = sample_train2, test = sample_test2,
predict = "prediction", actual = "illegalRental_dv" )
class(sample_train2$prediction)
summary(sample_train2$prediction)
summary(sample_test2$prediction)
acc.perf = performance(sample_train2, measure = "acc")
acc.perf = performance(sample_train2$prediction, measure = "acc")
?prediction
data(ROCR.simple)
pred <- prediction(ROCR.simple$predictions,ROCR.simple$labels)
View(pred)
pred<-prediction(sample_train2$predictions, sample_train2$illegalRental_dv)
pred<-prediction(sample_train2$prediction, sample_train2$illegalRental_dv)
acc.perf = performance(pred, measure = "acc")
plot(acc.perf)
# define the theme for the next plot
ggthemr("light")
install.packages('ggthemr')
#accuracy plot - test set
pred2<-prediction(sample_test2$prediction, sample_test2$illegalRental_dv)
acc.perf2 = performance(pred2, measure = "acc")
plot(acc.perf2)
#full data
ggplot(fulltestProbs, aes(d = Class, m = Probs)) +
geom_roc(n.cuts = 50, labels = FALSE) +
style_roc(theme = theme_grey) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey')
#sample data
ggplot(sampletestProbs, aes(d = Class, m = Probs)) +
geom_roc(n.cuts = 50, labels = FALSE) +
style_roc(theme = theme_grey) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey')
#sample data
ggplot(sampletestProbs, aes(d = Class, m = Probs)) +
geom_roc(n.cuts = 50, labels = FALSE) +
style_roc(theme = theme_grey) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey') +
theme_minimal(())
theme_minimal(
)
#sample data
ggplot(sampletestProbs, aes(d = Class, m = Probs)) +
geom_roc(n.cuts = 50, labels = FALSE) +
style_roc(theme = theme_grey) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey') +
theme_minimal()
#full data
ggplot(fulltestProbs, aes(d = Class, m = Probs)) +
geom_roc(n.cuts = 50, labels = FALSE) +
style_roc(theme = theme_grey) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey') +
theme_minimal()
table(newsample_test)
table(newsample_test$year_built_copy)
#read data
violations<-read.csv('Dataset 4.2/li_violations.csv')
#make copy
violations2 <- violations
#first cleaning of unecessary columns
violations2<-subset(violations,select=-c(geocode_x,geocode_y,objectid,casenumber,apfailkey,
the_geom_webmercator))
#limit violations to 2016/17/18
violations2$year<-substring(violations2$violationdate,1,4)
violations_clean<-subset(violations2, violations2$year=="2016" | violations2$year=='2017' | violations2$year=='2018')
#create binary for illegal rental -
#### 9-3902(1) = 1 and 2 family homes, 9-3902(2) = Multi-family homes, 9-3902(3) = rooming unit or house, 9-3902(4) = hotel
violations_clean$illegalRental <- ifelse(violations_clean$violationtype == '9-3902 (1)' |
violations_clean$violationtype == '9-3902 (2)' |
violations_clean$violationtype == '9-3902 (3)',1,0)
vio_temp <- violations_clean
vio_temp
?st_as_sf
sort(names(vio_temp))
vio_temp <- st_as_sf(vio_temp, coords=c('lng','lat'), crs=4326)
table(vio_temp$illegalRental)
vio_temp <- vio_temp[,vio_temp$illegalRental==1]
vio_temp <- vio_temp[vio_temp$illegalRental==1,]
sum(is.na(vio_temp))
sum(is.na(vio_temp$lng)) #only 7
vio_temp <- st_as_sf(vio_temp, coords=c('lng','lat'), crs=4326)
vio_temp %>%
ggplot()+
geom_sf(data=phillyshape2, col='grey90')+
geom_sf(aes(col=built_pre1900))+
scale_color_viridis_d()
#join in docket data
phillyshape<-st_read('Dataset 4.2/phillyproj2010.shp')
phillyshape = phillyshape%>%st_set_crs(4326)
st_transform(phillyshape, 4326)
vio_temp %>%
ggplot()+
geom_sf(data=phillyshape, col='grey90')+
geom_sf(aes(col=built_pre1900))+
scale_color_viridis_d()
names(vio_temp)
unlist(lapply(vio_temp, class))
vio_temp %>%
ggplot()+
geom_sf(data=phillyshape, col='grey90')+
geom_sf(aes(col=year))+
scale_color_viridis_d()
vio_temp %>%
ggplot()+
geom_sf(data=phillyshape, col='grey90')+
geom_sf(data=vio_temp[1:100,],aes(col=year))+
scale_color_viridis_d()
ggplot()+
geom_sf(data=phillyshape, col='grey90')
phillyshape2<- st_transform(phillyshape, 4326)
ggplot()+
geom_sf(data=phillyshape2, col='grey90')
ggplot()+
geom_sf(data=phillyshape2, col='grey90')+
geom_sf(data=vio_temp[1:100,],aes(col=year))+
scale_color_viridis_d()
#open census tracts shapefile
census_tracts<-st_read('Dataset 4.2/Census_Tracts_2010.shp')
#test
ggplot() + geom_sf(data=census_tracts)
ggplot()+
geom_sf(data=census_tracts, col='grey90')+
geom_sf(data=vio_temp[1:100,],aes(col=year))+
scale_color_viridis_d()
rm(phillyshape)
rm(phillyshape2)
ggplot()+
geom_sf(data=census_tracts, col='grey90')+
geom_sf(data=vio_temp[1:1000,],aes(col=year, size=0.1))+
scale_color_viridis_d()
ggplot()+
geom_sf(data=census_tracts, col='grey90')+
geom_sf(data=vio_temp[1:10,],aes(col=year, size=0.1))+
scale_color_viridis_d()
ggplot()+
geom_sf(data=census_tracts)+
geom_sf(data=vio_temp[1:10,],aes(col=year), size=0.1)+
scale_color_viridis_d()
ggplot()+
geom_sf(data=census_tracts,col='grey90')+
geom_sf(data=vio_temp[1:1000,],aes(col=year), size=0.1)+
scale_color_viridis_d()
ggplot()+
geom_sf(data=census_tracts,col='grey90')+
geom_sf(data=vio_temp,aes(col=year), size=0.1)+
scale_color_viridis_d()
ggplot()+
geom_sf(data=census_tracts,col='grey90')+
geom_sf(data=vio_temp,aes(col=year, alpha=0.05), size=0.1)+
scale_color_viridis_d()
kable(resultsTable)
temp <- samplescombined2 %>%
group_by(MAPNAME) %>%
summarize (count = n())
temp <- samplescombined2 %>%
group_by(MAPNAME) %>%
dplyr::summarize(count = n())
View(temp)
temp2 <- fulldat %>%
group_by(MAPNAME) %>%
dplyr::summarize (count = n())
View(temp2)
temp3 <- fulldat %>%
group_by(MAPNAME) %>%
dplyr::summarize (count = n(),
illegalRental = illegalRental_dv,
)
temp3 <- fulldat %>%
group_by(MAPNAME) %>%
dplyr::summarize (count = n(),
illegalRental = illegalRental_dv)
temp3 <- fulldat %>%
filter(MAPNAME=='Grays Ferry') %>%
dplyr::summarize (count = n(),
illegalRental = illegalRental_dv)
temp3 <- fulldat %>%
filter(MAPNAME=='Grays Ferry')
View(temp3)
table(temp3$illegalRental_dv)
127/4198
save.image("~/Downloads/MUSA801Practicum/0421_env.RData")
rm(violations)
rm(violations2)
rm(violations_clean)
save.image("~/Downloads/MUSA801Practicum/0421_env.RData")
setwd("~/Downloads/UberData")
setwd("~/Downloads/UberData")
apr14 <- read.csv('uber-raw-data-apr14.csv')
aug14 <- read.csv('uber-raw-data-aug14.csv')
janjune15 <- read.csv('uber-raw-data-janjune15.csv')
janjune15 <- read.csv('uber-raw-data-janjune-15.csv')
jul14 <- read.csv('uber-raw-data-jul14.csv')
jun14 <- read.csv('uber-raw-data-jun14.csv')
may14 <- read.csv('uber-raw-data-may14.csv')
sep14 <- read.csv('uber-raw-data-sep14.csv')
combine <- rbind(apr14,may14)
564516+652435
combine <- rbind(combine,jun14)
combine <- rbind(combine,jul14)
combine <- rbind(combine,aug14)
combine <- rbind(combine,sep14)
1216951+663844+796121+829275+1028136
aprsep14 <- combine
setwd("~/Downloads/MUSA_SPRING19/_musa620-final/UberData")
apr14 <- read.csv('uber-raw-data-apr14.csv')
may14 <- read.csv('uber-raw-data-may14.csv')
jun14 <- read.csv('uber-raw-data-jun14.csv')
jul14 <- read.csv('uber-raw-data-jul14.csv')
aug14 <- read.csv('uber-raw-data-aug14.csv')
sep14 <- read.csv('uber-raw-data-sep14.csv')
combine <- rbind(apr14,may14)
combine <- rbind(combine,jun14)
combine <- rbind(combine,jul14)
combine <- rbind(combine,aug14)
combine <- rbind(combine,sep14)
aprsep14 <- combine
setwd("~/Downloads/MUSA_SPRING19/_musa620-final/UberData")
apr14 <- read.csv('uber-raw-data-apr14.csv')
View(apr14)
may14 <- read.csv('uber-raw-data-may14.csv')
jun14 <- read.csv('uber-raw-data-jun14.csv')
jul14 <- read.csv('uber-raw-data-jul14.csv')
aug14 <- read.csv('uber-raw-data-aug14.csv')
sep14 <- read.csv('uber-raw-data-sep14.csv')
combine <- rbind(apr14,may14)
combine <- rbind(combine,jun14)
combine <- rbind(combine,jul14)
combine <- rbind(combine,aug14)
combine <- rbind(combine,sep14)
aprsep14 <- combine
janjune15 <- read.csv('uber-raw-data-janjune-15.csv')
View(janjune15)
